global proc shelf_Milan () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.cmds as cmds\nif cmds.commandPort(':7720', q=True) !=1:\n     cmds.commandPort(n=':7720', eo = False, nr = True)" 
        -enableBackground 0
        -align "center" 
        -label "import maya.cmds as cmds\nif cmds.commandPort(':7720', q=True) !=..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Port" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\nif cmds.commandPort(':7720', q=True) !=1:\n     cmds.commandPort(n=':7720', eo = False, nr = True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Creates sim attribute" 
        -enableBackground 0
        -align "center" 
        -label "for mesh in cmds.ls(type='mesh'):\n    \n    if cmds.objExists(mes..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "SIMATTR" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\nfor mesh in cmds.ls(sl=True):            \n    if not cmds.objExists(mesh+'.sim'):\n        cmds.addAttr(mesh,ln='sim',at='bool')\n        cmds.setAttr(mesh+'.sim', True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nfor node in pm.ls(sl=True):\n    node.getShape().aiSubdivType.set(1)\n    node.getShape().aiSubdivIterations.set(2)" 
        -enableBackground 0
        -align "center" 
        -label "import pymel.core as pm\n\nfor node in pm.ls(sl=True):\n    node.ge..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "SubD" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nfor node in pm.ls(sl=True):\n    node.getShape().aiSubdivType.set(1)\n    node.getShape().aiSubdivIterations.set(2)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nfor ref in pm.ls(type='reference'):  \n    try:\n        pm.referenceQuery(ref,filename=True)  \n    except:  \n        pm.lockNode(ref,l=False)\n        pm.delete(ref)" 
        -enableBackground 0
        -align "center" 
        -label "import pymel.core as pm\n\nfor ref in pm.ls(type='reference'):  \n ..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "REF" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nfor ref in pm.ls(type='reference'):  \n    try:\n        pm.referenceQuery(ref,filename=True)  \n    except:  \n        pm.lockNode(ref,l=False)\n        pm.delete(ref)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
